[{"C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\index.js":"1","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\App.js":"2","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\QuestionBox.js":"3","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\context\\Finder.js":"4","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\AnswerBox.jsx":"5","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\UserBox.jsx":"6"},{"size":207,"mtime":1611721943136,"results":"7","hashOfConfig":"8"},{"size":437,"mtime":1611981900050,"results":"9","hashOfConfig":"8"},{"size":1187,"mtime":1611986963582,"results":"10","hashOfConfig":"8"},{"size":907,"mtime":1611982118497,"results":"11","hashOfConfig":"8"},{"size":2543,"mtime":1611988486142,"results":"12","hashOfConfig":"8"},{"size":1653,"mtime":1611982164372,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xix54",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\index.js",[],["30","31"],"C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\App.js",[],"C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\QuestionBox.js",["32","33"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { QnAContext } from \"./context/Finder\";\r\n\r\nconst QuestionBox = () => {\r\n  /* 로컬 state 였던 것\r\n  const [question, setQ] = useState([]);*/\r\n\r\n  const { question, setQ } = useContext(QnAContext);\r\n  const { questionId, setQID } = useContext(QnAContext);\r\n\r\n  const getQuestion = async () => {\r\n    const response = await fetch(\r\n      \"http://shjeon-qna.herokuapp.com/question/random\"\r\n    );\r\n    // console.log(response);\r\n    // const jsonData = JSON.stringify(response);\r\n    const jsonData = await response.json();\r\n    // console.log(jsonData.question.contents);\r\n\r\n    setQ(jsonData.question.contents);\r\n    // console.log(question);\r\n    setQID(jsonData.question.id);\r\n  };\r\n  useEffect(() => {\r\n    getQuestion();\r\n  }, []);\r\n\r\n  const checkingId = (a) => {\r\n    if (a) {\r\n      return <h2>ok random question 😆</h2>;\r\n    } else {\r\n      return <h2>not ok... 😢</h2>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-primary\">\r\n      {checkingId(questionId)}\r\n      <h2>{questionId}</h2>\r\n      <h1 className=\"text-warning\">{question}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\context\\Finder.js",[],"C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\AnswerBox.jsx",["34","35","36","37"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { QnAContext } from \"./context/Finder\";\r\n\r\nconst AnswerBox = () => {\r\n  // const { question, setQ } = useContext(QnAContext);\r\n  const { answer, setA } = useContext(QnAContext);\r\n  const { questionId, setQID } = useContext(QnAContext);\r\n  const {globalName, setG} = useContext(QnAContext);\r\n  // const {history, setHistory} = useContext(QnAContext);\r\n  const [history, setHistory] = useState(null);\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `https://shjeon-qna.herokuapp.com/question/answer/${questionId}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            result: answer,\r\n            user:globalName\r\n          }),\r\n        }\r\n      );\r\n      // console.log(response);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n  // console.log(answer);\r\n\r\n   const handleClick=async()=>{\r\n    const response = await fetch(`http://shjeon-qna.herokuapp.com/question/all-answer/${globalName}`);\r\n\r\n    const jsonData = await response.json();\r\n    console.log(jsonData);\r\n\r\n    setHistory(jsonData)\r\n  }\r\n\r\n\r\nconsole.log(history);\r\n// console.log(history.list);\r\n// console.log(history.list[0].id)\r\n//     setResult(history.list[0].result)\r\n//     setListQ(history.list[0].question.contents)\r\n  return (\r\n    <div className=\"bg-secondary\">\r\n      <h3>저장될 질문 id : {questionId}</h3>\r\n      {globalName ?\r\n      <>\r\n      <form className=\"d-flex mt-5\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={answer}\r\n          onChange={(e) => setA(e.target.value)}\r\n        ></input>\r\n        <button className=\"btn btn-primary \">제출</button>\r\n      </form>\r\n        <button onClick={handleClick}>불러오기</button>\r\n        {history ?\r\n        history.list.map((h,index)=>{return(\r\n          <div key={index}>\r\n          <p>{h.id}</p>\r\n          <p>{h.question.contents}</p>\r\n          <p>{h.result}</p>\r\n          </div>\r\n      )})\r\n      : <div>아닙니다</div> }\r\n        </>\r\n      : <div>이름을 입력해주세요</div>}\r\n      {/* {history.list[0] ?\r\n    history.list.map(h=>{\r\n        <>\r\n        <p>{h.id}</p>\r\n        <p>{h.question.contents}</p>\r\n        <p>{h.result}</p>\r\n        </>\r\n    })\r\n      : <h4>no answer history</h4>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerBox;\r\n","C:\\Users\\wslee\\coding-master\\our-baby\\frontend\\src\\UserBox.jsx",["38","39","40"],"import { useContext, useState } from \"react\";\r\nimport { QnAContext } from \"./context/Finder\";\r\n\r\n\r\nconst UserBox=()=>{\r\n    // const { userName, setU } = useContext(QnAContext);\r\n    // const [name, setName] = useState(\"\")\r\n    // const [username, setUserName] = useState(localStorage.getItem(\"user\"))\r\n    const {name, setName} = useContext(QnAContext);\r\n    const {username, setUserName} = useContext(QnAContext);\r\n    const {globalName, setG} = useContext(QnAContext);\r\n    setG(username)\r\n\r\n    // const [test, setTest] = useState(true)\r\n    const current = localStorage.getItem(\"user\");\r\n    // if(current && test){\r\n    //     const value = window.confirm(`${current}입니까?`)\r\n    //     if(value){\r\n            \r\n    //         setName(current)\r\n    //         setTest(false)\r\n    //         console.log(test);\r\n    //     }\r\n    // }else{\r\n    //     console.log(\"없어\");\r\n    // }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // setU(e.target.value)\r\n        localStorage.setItem(\"user\",name)\r\n        setUserName(name)\r\n        setG(name)\r\n      };\r\n      console.log(username);\r\n\r\n\r\n      const handleClick=()=>{\r\n          localStorage.removeItem(\"user\")\r\n          setUserName(null)\r\n          setG(null)\r\n\r\n      }\r\n\r\n    return(\r\n    <div>{!username ? <form className=\"d-flex mt-5\" onSubmit={(e) => handleSubmit(e)} >\r\n    <input type=\"text\" className=\"form-control\" onChange={(e)=>setName(e.target.value)}  placeholder=\"이름을 입력해 주세용\" />\r\n    </form>: <div>{username}<button onClick={handleClick}>변경</button></div>\r\n    }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserBox",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":40,"nodeType":"47","messageId":"48","endLine":1,"endColumn":48},{"ruleId":"49","severity":1,"message":"50","line":26,"column":6,"nodeType":"51","endLine":26,"endColumn":8,"suggestions":"52"},{"ruleId":"45","severity":1,"message":"53","line":1,"column":29,"nodeType":"47","messageId":"48","endLine":1,"endColumn":38},{"ruleId":"45","severity":1,"message":"54","line":7,"column":23,"nodeType":"47","messageId":"48","endLine":7,"endColumn":29},{"ruleId":"45","severity":1,"message":"55","line":8,"column":22,"nodeType":"47","messageId":"48","endLine":8,"endColumn":26},{"ruleId":"45","severity":1,"message":"56","line":16,"column":13,"nodeType":"47","messageId":"48","endLine":16,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":1,"column":22,"nodeType":"47","messageId":"48","endLine":1,"endColumn":30},{"ruleId":"45","severity":1,"message":"57","line":11,"column":12,"nodeType":"47","messageId":"48","endLine":11,"endColumn":22},{"ruleId":"45","severity":1,"message":"58","line":15,"column":11,"nodeType":"47","messageId":"48","endLine":15,"endColumn":18},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestion'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'useEffect' is defined but never used.","'setQID' is assigned a value but never used.","'setG' is assigned a value but never used.","'response' is assigned a value but never used.","'globalName' is assigned a value but never used.","'current' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [getQuestion]",{"range":"64","text":"65"},[796,798],"[getQuestion]"]